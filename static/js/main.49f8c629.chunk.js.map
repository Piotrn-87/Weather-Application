{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","className","onSubmit","submit","type","value","onChange","change","placeholder","Result","weather","date","city","country","sunrise","sunset","temp","maxTemp","minTemp","pressure","wind","error","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","icon","faMapMarkerAlt","Fragment","APIkey","App","state","handleInputChange","event","setState","target","handleSubmit","preventDefault","API","fetch","then","response","ok","Error","json","data","time","toLocaleString","sys","main","toFixed","temp_min","temp_max","speed","catch","console","log","prevState","this","React","Component","root","document","getElementById","ReactDOM","render"],"mappings":"uPAiBeA,EAfF,SAAAC,GACX,OACE,0BAAMC,UAAU,OAAOC,SAAUF,EAAMG,QACrC,2BACEF,UAAU,cACVG,KAAK,OACLC,MAAOL,EAAMK,MACbC,SAAUN,EAAMO,OAChBC,YAAY,sBAEd,4BAAQP,UAAU,gBAAlB,c,gBC2CSQ,EAnDA,SAAAT,GAAU,IAAD,EAalBA,EAAMU,QAXRC,EAFoB,EAEpBA,KACAC,EAHoB,EAGpBA,KACAC,EAJoB,EAIpBA,QACAC,EALoB,EAKpBA,QACAC,EANoB,EAMpBA,OACAC,EAPoB,EAOpBA,KACAC,EARoB,EAQpBA,QACAC,EAToB,EASpBA,QACAC,EAVoB,EAUpBA,SACAC,EAXoB,EAWpBA,KACAC,EAZoB,EAYpBA,MAGEC,EAAU,KAEd,IAAKD,GAAST,EAAM,CAClB,IAAMW,EAAc,IAAIC,KAAe,IAAVV,GAAgBW,qBACvCC,EAAa,IAAIF,KAAc,IAATT,GAAeU,qBAC3CH,EACE,yBAAKrB,UAAU,WACb,wBAAIA,UAAU,wBAAd,YACA,wBAAIA,UAAU,iBAAd,IAAgCU,EAAhC,KACA,wBAAIV,UAAU,yBACX,IACD,kBAAC,IAAD,CAAiBA,UAAU,gBAAgB0B,KAAMC,MAChDhB,EAHH,KAGWC,EAAS,KAEpB,yBAAKZ,UAAU,eACb,wBAAIA,UAAU,4BAA4Be,EAA1C,UACA,0BAAMf,UAAU,wBACd,0CAAgBiB,EAAhB,UACA,0CAAgBD,EAAhB,YAGJ,yCAAeE,EAAf,QACA,qCAAWC,EAAX,QACA,wCAAcG,GACd,uCAAaG,IAKnB,OACE,kBAAC,IAAMG,SAAP,KACE,wBAAI5B,UAAU,SAASoB,EAAK,wBAAoBT,GAASU,EAAzD,OC7CAQ,G,KAAS,oCA0EAC,E,2MAvEbC,MAAQ,CACN3B,MAAO,GACPM,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNE,QAAS,GACTD,QAAS,GACTE,SAAU,GACVC,KAAM,GACNC,OAAO,G,EAGTY,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CACZ9B,MAAO6B,EAAME,OAAO/B,S,EAIxBgC,aAAe,SAAAH,GACbA,EAAMI,iBACN,IAAMC,EAAG,4DAAwD,EAAKP,MAAM3B,MAAnE,kBAAkFyB,EAAlF,iBACTU,MAAMD,GACHE,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,sCAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAK,GACJ,IAAMC,GAAO,IAAIvB,MAAOwB,iBACxB,EAAKb,UAAS,SAAAH,GAAK,MAAK,CACtBX,OAAO,EACPV,KAAMoC,EACNjC,QAASgC,EAAKG,IAAInC,QAClBC,OAAQ+B,EAAKG,IAAIlC,OACjBC,KAAM8B,EAAKI,KAAKlC,KAAKmC,QAAQ,GAC7BjC,QAAS4B,EAAKI,KAAKE,SAASD,QAAQ,GACpClC,QAAS6B,EAAKI,KAAKG,SAASF,QAAQ,GACpChC,SAAU2B,EAAKI,KAAK/B,SACpBC,KAAM0B,EAAK1B,KAAKkC,MAChB1C,KAAMoB,EAAM3B,MACZQ,QAASiC,EAAKG,IAAIpC,eAGrB0C,OAAM,SAAAlC,GACLmC,QAAQC,IAAIpC,GACZ,EAAKc,UAAS,SAAAuB,GAAS,MAAK,CAC1BrC,OAAO,EACPT,KAAM8C,EAAUrD,c,wEAMtB,OACE,yBAAKJ,UAAU,OACb,kBAAC,EAAD,CACEI,MAAOsD,KAAK3B,MAAM3B,MAClBE,OAAQoD,KAAK1B,kBACb9B,OAAQwD,KAAKtB,eAEf,kBAAC,EAAD,CAAQ3B,QAASiD,KAAK3B,a,GAlEZ4B,IAAMC,WCFlBC,EAAOC,SAASC,eAAe,QAErCC,IAASC,OAAO,kBAAC,EAAD,MAASJ,I","file":"static/js/main.49f8c629.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = props => {\r\n  return (\r\n    <form className=\"Form\" onSubmit={props.submit}>\r\n      <input\r\n        className=\"Form__input\"\r\n        type=\"text\"\r\n        value={props.value}\r\n        onChange={props.change}\r\n        placeholder=\"&#8981; Write City\"\r\n      ></input>\r\n      <button className=\"Form__button\"> Search </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Result = props => {\r\n  const {\r\n    date,\r\n    city,\r\n    country,\r\n    sunrise,\r\n    sunset,\r\n    temp,\r\n    maxTemp,\r\n    minTemp,\r\n    pressure,\r\n    wind,\r\n    error\r\n  } = props.weather;\r\n\r\n  let content = null;\r\n\r\n  if (!error && city) {\r\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n    content = (\r\n      <div className=\"Content\">\r\n        <h4 className=\"Content__description\">Updated:</h4>\r\n        <h1 className=\"Content__date\"> {date} </h1>\r\n        <h2 className=\"Content__localization\">\r\n          {\" \"}\r\n          <FontAwesomeIcon className=\"Content__icon\" icon={faMapMarkerAlt} />\r\n          {city}, {country}{\" \"}\r\n        </h2>\r\n        <div className=\"ContentTemp\">\r\n          <h1 className=\"ContentTemp__temperature\">{temp} &#176;C</h1>\r\n          <span className=\"ContentTemp__min-max\">\r\n            <h4> Min temp: {minTemp} &#176;C</h4>\r\n            <h4> Max temp: {maxTemp} &#176;C</h4>\r\n          </span>\r\n        </div>\r\n        <h2>Pressure: {pressure} hpa</h2>\r\n        <h2>Wind: {wind} m/s</h2>\r\n        <h2>Sunrise: {sunriseTime}</h2>\r\n        <h2>Sunset: {sunsetTime}</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h4 className=\"Error\">{error ? `Brak w bazie: ${city}` : content} </h4>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\nimport Form from \"./Form\";\nimport Result from \"./Result\";\nimport \"../style.scss\";\n\nconst APIkey = \"4bea9bc8d4bfd24c6953bdb10a110b19\";\n\nclass App extends React.Component {\n  state = {\n    value: \"\",\n    date: \"\",\n    city: \"\",\n    country: \"\",\n    sunrise: \"\",\n    sunset: \"\",\n    temp: \"\",\n    minTemp: \"\",\n    maxTemp: \"\",\n    pressure: \"\",\n    wind: \"\",\n    error: false\n  };\n\n  handleInputChange = event => {\n    this.setState({\n      value: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIkey}&units=metric`;\n    fetch(API)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(\"Error !! SprÃ³buj jeszcze raz\");\n      })\n      .then(response => response.json())\n      .then(data => {\n        const time = new Date().toLocaleString();\n        this.setState(state => ({\n          error: false,\n          date: time,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp.toFixed(0),\n          minTemp: data.main.temp_min.toFixed(0),\n          maxTemp: data.main.temp_max.toFixed(0),\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          city: state.value,\n          country: data.sys.country\n        }));\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState(prevState => ({\n          error: true,\n          city: prevState.value\n        }));\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form\n          value={this.state.value}\n          change={this.handleInputChange}\n          submit={this.handleSubmit}\n        />\n        <Result weather={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./style.scss\";\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<App />, root);\n"],"sourceRoot":""}